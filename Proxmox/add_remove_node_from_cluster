# CREATE CLUSTER
pvecm create YOUR-CLUSTER-NAME
pvecm status

# ADD NODE
pvecm add IP-ADDRESS

# REMOVE NODE
# It is very important to power off the node before removal, and make sure that it will not power on again (in the network) as it is. 
# Move all virtual machines from the node, just use the Central Web-based Management to migrate or delete all VM´s. Make sure you have no local backups you want to keep, or save them accordingly.
#Log in to one remaining node via ssh. Issue a pvecm nodes command to identify the nodeID: 

pvecm status
# power down the node 
pvecm nodes

# then delete it
pvecm delnode IP-ADDRESS

# If something missed (you do not have turned off the node) and got “authentication key already exists”

First stop the corosync and the pve-cluster services on the node:

systemctl stop pve-cluster
systemctl stop corosync

Start the cluster filesystem again in local mode:

pmxcfs -l

Delete the corosync configuration files:

rm /etc/pve/corosync.conf
rm /etc/corosync/*

You can now start the filesystem again as normal service:

killall pmxcfs
systemctl start pve-cluster

The node is now separated from the cluster. You can deleted it from a remaining node of the cluster with:

pvecm delnode oldnode

If the command failed, because the remaining node in the cluster lost quorum when the now separate node exited, you may set the expected votes to 1 as a workaround:

pvecm expected 1

And the repeat the pvecm delnode command.

Now switch back to the separated node, here delete all remaining files left from the old cluster. This ensures that the node can be added to another cluster again without problems.

rm /var/lib/corosync/*

=========================

if got error:

unable to copy ssh ID: exit code 1

then
ssh-keygen -f "/etc/ssh/ssh_known_hosts" -R IP_OF_NODE

if got

pvecm status
Corosync config '/etc/pve/corosync.conf' does not exist - is this node part of a cluster?

do

pvecm create CLUSTER_NAME



